{"version":3,"file":"static/js/622.15a420a7.chunk.js","mappings":"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","sources":["common/Style.js","components/HomePage/MovieHomePageCard.jsx","components/HomePage/HomePage.jsx","components/MoviePage/MovieItemCard.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 15px 15px 0 0;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.active};\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 15px 15px 0 0;\n  max-width: 300px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 15px 15px 0 0;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};\n","import PropTypes from 'prop-types';\nimport { MovieItemCard } from '../MoviePage/MovieItemCard';\nimport { MovieList } from '../../common/Style';\n\nexport function MovieHomePageCard({ films }) {\n  return (\n    <MovieList>\n      {films.map(\n        ({ id, title, name, backdrop_path, vote_count, vote_average }) => (\n          <MovieItemCard\n            key={id}\n            id={id}\n            name={name}\n            title={title}\n            backdrop_path={backdrop_path}\n            vote_count={vote_count}\n            vote_average={vote_average}\n          />\n        )\n      )}\n    </MovieList>\n  );\n}\n\nMovieHomePageCard.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      backdrop_path: PropTypes.string.isRequired,\n      vote_count: PropTypes.number.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendMovie } from '../../services/movieApi';\nimport { MovieHomePageCard } from './MovieHomePageCard';\nimport { Title } from '../../common/Style';\n\nexport default function HomePage() {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieList = async () => {\n      await fetchTrendMovie().then(data => setFilms(data.results));\n    };\n    fetchMovieList();\n    return;\n  }, []);\n\n  const toDay = new Date().toLocaleDateString();\n\n  return (\n    <article>\n      <Title>Trending today: {toDay}</Title>\n      <MovieHomePageCard films={films} />\n    </article>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport noFilm from '../../images/noFilm.jpg';\nimport {\n  CardInfoContainer,\n  SecondaryMovieTitle,\n  MovieItem,\n  MovieText,\n  ImageFilm,\n  LinkStyled,\n} from '../../common/Style';\n\nexport function MovieItemCard({\n  id,\n  title,\n  name,\n  backdrop_path,\n  vote_average,\n}) {\n  const location = useLocation();\n\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        {backdrop_path ? (\n          <ImageFilm\n            src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\n            alt=\"\"\n          />\n        ) : (\n          <ImageFilm src={noFilm} alt=\"\" />\n        )}\n\n        <CardInfoContainer>\n          <SecondaryMovieTitle>{title ? title : name}</SecondaryMovieTitle>\n          <MovieText>Average rating: {vote_average}</MovieText>\n        </CardInfoContainer>\n      </LinkStyled>\n    </MovieItem>\n  );\n}\n\nMovieItemCard.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  backdrop_path: PropTypes.string,\n  vote_count: PropTypes.number,\n  vote_average: PropTypes.number,\n};\n","import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '02589241ae4d8ab43f8f4c55a27ffcb3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\n// fetchSearchMovie.propTypes = {\n//   search: PropTypes.string.isRequired,\n// };\n\n// fetchMovieDetails.propTypes = {\n//   id: PropTypes.number.isRequired,\n// };\n\n// fetchAboutMovie.propTypes = {\n//   id: PropTypes.number.isRequired,\n//   about: PropTypes.string.isRequired,\n// };\n"],"names":["Title","styled","props","theme","colors","primaryText","LinkStyled","NavLink","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","active","Img","ImageFilm","MovieHomePageCard","films","map","id","title","name","backdrop_path","vote_count","vote_average","MovieItemCard","HomePage","useState","setFilms","useEffect","fetchMovieList","fetchTrendMovie","then","data","results","toDay","Date","toLocaleDateString","location","useLocation","to","state","from","src","alt","noFilm","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchSearchMovie","query","fetchMovieDetails","moviesId","fetchCast","fetchReviews","movieId"],"sourceRoot":""}
{"version":3,"file":"static/js/523.385101be.chunk.js","mappings":"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","sources":["common/Style.js","components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetailsPage.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 15px 15px 0 0;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.active};\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 15px 15px 0 0;\n  max-width: 300px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 15px 15px 0 0;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  padding: 10px;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const FilmInfoContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n  max-width: 100%;\n  max-height: 50%;\n`;\nexport const FilmMore = styled.section`\n  padding: 10px;\n  margin: 15px auto;\n`;\nexport const Paragraph = styled.div`\n  margin-bottom: 15px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  font-size: 14px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresItem = styled.li`\n  font-weight: 600;\n  margin-right: 7px;\n`;\n\nexport const LinkReturn = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  padding: 10px 40px;\n  color: ${props => props.theme.colors.active};\n  font-weight: 500;\n  width: 150px;\n  background-color: ${props => props.theme.colors.greyBg};\n  border-radius: 25px 0 0 25px;\n  transition: all 250ms ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  height: 45px;\n  padding: 10px 30px;\n  margin-right: 15px;\n  border-radius: 25px 0 0 25px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n   :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n`;\nexport const LinkRewiews = styled(NavLink)`\n  height: 45px;\n  padding: 10px 15px;\n  margin-right: 15px;\n  border-radius: 0 25px 25px 0;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n   :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/movieApi';\nimport noPhoto from '../../images/noPhoto.png';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n} from './MovieDetailsStyled';\n\nimport { MainMovieTitle, Img, SecondaryMovieTitle } from '../../common/Style';\n\nexport default function MovieDetailsPage() {\n  const [movieObj, setMovieObj] = useState({});\n\n  let { moviesId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = () => {\n      fetchMovieDetails(moviesId).then(data => {\n        setMovieObj(data);\n      });\n    };\n    oneMovie();\n  }, [moviesId]);\n\n  const releaseData = new Date(movieObj.release_date);\n\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movieObj;\n  return (\n    <>\n      <LinkReturn to={locationFrom}> â—€ BACK </LinkReturn>\n      <Section>\n        {poster_path ? (\n          <Img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt=\"\"\n            min-width={'100px'}\n          />\n        ) : (\n          <Img src={noPhoto} alt=\"\" />\n        )}\n\n        <FilmInfoContainer>\n          <MainMovieTitle>\n            {title} ({releaseData.getFullYear(release_date)})\n          </MainMovieTitle>\n          <SecondaryMovieTitle>\n            User score: {vote_average * 10}%\n          </SecondaryMovieTitle>\n          <SecondaryMovieTitle>Genres:</SecondaryMovieTitle>\n          <GenresList>\n            {genres &&\n              genres.map(({ name }) => (\n                <GenresItem key={name}>{name}</GenresItem>\n              ))}\n          </GenresList>\n          <SecondaryMovieTitle>Overview </SecondaryMovieTitle>\n          {overview ? (\n            <Paragraph>{overview}</Paragraph>\n          ) : (\n            <Paragraph>No overview</Paragraph>\n          )}\n        </FilmInfoContainer>\n      </Section>\n      <Section>\n        <LinkCast\n          to={`/movies/${moviesId}/cast`}\n          state={{ from: locationFrom }}\n        >\n          Cast\n        </LinkCast>\n        <LinkRewiews\n          to={`/movies/${moviesId}/reviews`}\n          state={{ from: locationFrom }}\n        >\n          Reviews\n        </LinkRewiews>\n      </Section>\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n}\n","import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '02589241ae4d8ab43f8f4c55a27ffcb3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\n// fetchSearchMovie.propTypes = {\n//   search: PropTypes.string.isRequired,\n// };\n\n// fetchMovieDetails.propTypes = {\n//   id: PropTypes.number.isRequired,\n// };\n\n// fetchAboutMovie.propTypes = {\n//   id: PropTypes.number.isRequired,\n//   about: PropTypes.string.isRequired,\n// };\n"],"names":["Title","styled","props","theme","colors","primaryText","LinkStyled","NavLink","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","active","Img","ImageFilm","Section","FilmInfoContainer","FilmMore","Paragraph","GenresList","GenresItem","LinkReturn","greyBg","white","LinkCast","LinkRewiews","MovieDetailsPage","useState","movieObj","setMovieObj","moviesId","useParams","location","useLocation","locationFrom","state","from","useEffect","fetchMovieDetails","then","data","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","to","src","alt","noPhoto","getFullYear","map","name","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchSearchMovie","query","fetchCast","fetchReviews","movieId"],"sourceRoot":""}
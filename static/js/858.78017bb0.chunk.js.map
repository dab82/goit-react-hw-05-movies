{"version":3,"file":"static/js/858.78017bb0.chunk.js","mappings":"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","sources":["common/Style.js","components/MovieItemCard/MovieItemCard.jsx","icon/search.svg","components/MoviePage/MoviePageCard.jsx","components/MoviePage/MoviePageStyled.jsx","components/MoviePage/MoviePage.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 15px 15px 0 0;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.grey};\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 15px 15px 0 0;\n  max-width: 300px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 15px 15px 0 0;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport noFilm from '../../images/noFilm.jpg';\nimport {\n  CardInfoContainer,\n  SecondaryMovieTitle,\n  MovieItem,\n  MovieText,\n  ImageFilm,\n  LinkStyled,\n} from '../../common/Style';\n\nexport function MovieItemCard({\n  id,\n  title,\n  name,\n  backdrop_path,\n  release_date,\n}) {\n  const location = useLocation();\n\n  const releaseData = new Date(release_date);\n\n  return (\n    <MovieItem key={id}>\n      <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n        {backdrop_path ? (\n          <ImageFilm\n            src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\n            alt=\"\"\n          />\n        ) : (\n          <ImageFilm src={noFilm} alt=\"\" />\n        )}\n\n        <CardInfoContainer>\n          <SecondaryMovieTitle>{title ? title : name}</SecondaryMovieTitle>\n          <MovieText>{releaseData.toLocaleDateString()}</MovieText>\n        </CardInfoContainer>\n      </LinkStyled>\n    </MovieItem>\n  );\n}\n\nMovieItemCard.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  backdrop_path: PropTypes.string,\n  vote_count: PropTypes.number,\n  vote_average: PropTypes.number,\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-search\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.b1f781b99ceaafb9c831949bb54ae3cd.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\nimport { MovieItemCard } from '../MovieItemCard/MovieItemCard';\nimport { MovieList } from '../../common/Style';\n\nexport function MoviePageCard({ searchFilms }) {\n  return (\n    <MovieList>\n      {searchFilms.map(({ id, title, release_date, name, backdrop_path }) => (\n        <MovieItemCard\n          key={id}\n          id={id}\n          release_date={release_date}\n          title={title}\n          name={name}\n          backdrop_path={backdrop_path}\n        />\n      ))}\n    </MovieList>\n  );\n}\n\nMoviePageCard.propTypes = {\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      backdrop_path: PropTypes.string,\n      // release_date: PropTypes.number,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  font-size: 20px;\n  padding: 10px;\n  margin-right: 10px;\n  border: none;\n  border-radius: 20px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  box-shadow: inset 2px 2px 5px ${props => props.theme.colors.colorShadow},\n    inset -5px -5px 10px ${props => props.theme.colors.white};\n  transition: all 0.2s ease-in-out;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n  &:hover {\n    box-shadow: inset 1px 1px 2px var(--color-shadow),\n      inset -1px -1px 2px var(--color-white);\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  background-color: ${props => props.theme.colors.buttonBg};\n  width: 40px;\n  height: 40px;\n  border: 0;\n  border-radius: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  cursor: pointer;\n  outline: none;\n  appearance: none;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n  }\n\n  &:focus {\n    opacity: 2;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/movieApi';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ReactComponent as SearchIcon } from '../../icon/search.svg';\nimport { MoviePageCard } from './MoviePageCard';\nimport { Form, FormInput, SearchBtn } from './MoviePageStyled';\n\nexport default function MoviesPage() {\n  const [search, setSearch] = useState('');\n  const [searchSubmit, setSearchSubmit] = useState('');\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParam.has('query')) {\n      setSearchSubmit(searchParam.get('query'));\n    }\n    return () => {\n      setSearchFilms([]);\n    };\n  }, [searchParam]);\n\n  useEffect(() => {\n    if (searchSubmit === '') {\n      return;\n    }\n    const searchFilm = async () => {\n      await fetchSearchMovie(searchSubmit)\n        .then(data => {\n          if (data.results.length > 0) {\n            setSearchFilms(data.results);\n            return;\n          }\n          throw Error();\n        })\n        .catch(error => {\n          toast.error('Movie not found');\n          console.log(error);\n        });\n    };\n    searchFilm();\n  }, [searchSubmit]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchSubmit(search);\n\n    if (search === '') {\n      toast.error('Enter what you want to find please');\n      return;\n    }\n\n    setSearchParam({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Form onSubmit={handleSubmit}>\n        <FormInput\n          onChange={handleSearch}\n          value={search}\n          placeholder=\"Search movies...\"\n        />\n        <SearchBtn type=\"submit\">\n          <SearchIcon />\n        </SearchBtn>\n      </Form>\n      {searchFilms && <MoviePageCard searchFilms={searchFilms} />}\n    </>\n  );\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '02589241ae4d8ab43f8f4c55a27ffcb3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n"],"names":["Title","styled","props","theme","colors","primaryText","LinkStyled","NavLink","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","grey","Img","ImageFilm","MovieItemCard","id","title","name","backdrop_path","release_date","location","useLocation","releaseData","Date","to","state","from","src","alt","noFilm","toLocaleDateString","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","titleId","xmlns","width","height","fill","className","viewBox","ref","d","ForwardRef","MoviePageCard","searchFilms","map","Form","FormInput","colorShadow","white","SearchBtn","active","MoviesPage","useState","search","setSearch","searchSubmit","setSearchSubmit","setSearchFilms","useSearchParams","searchParam","setSearchParam","useEffect","has","get","searchFilm","fetchSearchMovie","then","data","results","Error","catch","error","toast","console","log","onSubmit","event","preventDefault","query","onChange","value","placeholder","type","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchMovieDetails","moviesId","fetchCast","fetchReviews","movieId","propTypes","PropTypes"],"sourceRoot":""}